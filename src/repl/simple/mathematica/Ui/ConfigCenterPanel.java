package repl.simple.mathematica.Ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


/**
 * Created by alex on 2/15/14.
 */
public class ConfigCenterPanel {
    JPanel rootPanel;
    JTextField mathLinkPath;
    JTextField mathKernelPath;
    JTextField nativeLibPath;

    JButton button1;
    JButton button2;
    JButton button3;
    JTextField mathLinkArgs;

    public ConfigCenterPanel() {
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                // TODO: show file selection dialog and update mathLinkPath
                // LocalFileSystem.getInstance().findFileByIoFile(new File("/"))
                Frame f = new Frame();
                f.setSize(500, 500);
                // get path for JLink java library
                FileDialog fd = new FileDialog(f, "Full path to JLink.jar", FileDialog.LOAD);
                fd.setDirectory("/");
                fd.setFile("*.jar");
                fd.setVisible(true);
                mathLinkPath.setText(fd.getFile());
            }
        });
        button2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                // TODO: show file selection dialog and update mathKernelPath
                Frame f = new Frame();
                f.setSize(500, 500);
                // get path for JLink java library
                FileDialog fd = new FileDialog(f, "Full path to JLink.jar", FileDialog.LOAD);
                fd.setDirectory("/");
                fd.setFile("*.jar");
                fd.setVisible(true);
                mathKernelPath.setText(fd.getFile());
            }
        });
        button3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                // TODO: show file selection dialog and update nativeLibPath
                Frame f = new Frame();
                f.setSize(500, 500);
                // get path for JLink java library
                FileDialog fd = new FileDialog(f, "Full path to JLink.jar", FileDialog.LOAD);
                fd.setDirectory("/");
                fd.setFile("*.jar");
                fd.setVisible(true);
                nativeLibPath.setText(fd.getDirectory());
            }
        });
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public String getMathLinkPath() {
        return mathLinkPath.getText();
    }

    public String getMathKernelPath() {
        return mathKernelPath.getText();
    }

    public String getNativeLibPath() {
        return nativeLibPath.getText();
    }

    public void setMathLinkPath(String path) {
        mathLinkPath.setText(path);
    }

    public void setMathKernelPath(String path) {
        mathKernelPath.setText(path);
    }

    public void setNativeLibPath(String path) {
        nativeLibPath.setText(path);
    }

    public String getMathLinkArgs() {
        return mathLinkArgs.getText();
    }

    public void setMathLinkArgs(String args) {
        mathLinkArgs.setText(args);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("MathLink Path");
        rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("MathKernel Path");
        rootPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Native Library Path");
        rootPanel.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mathLinkPath = new JTextField();
        mathLinkPath.setText("");
        rootPanel.add(mathLinkPath, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        mathKernelPath = new JTextField();
        rootPanel.add(mathKernelPath, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        nativeLibPath = new JTextField();
        rootPanel.add(nativeLibPath, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        button1 = new JButton();
        button1.setText("...");
        rootPanel.add(button1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button2 = new JButton();
        button2.setText("...");
        rootPanel.add(button2, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button3 = new JButton();
        button3.setText("...");
        rootPanel.add(button3, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rootPanel.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Math Link Arguments");
        rootPanel.add(label4, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mathLinkArgs = new JTextField();
        rootPanel.add(mathLinkArgs, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
